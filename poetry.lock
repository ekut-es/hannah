[[package]]
name = "absl-py"
version = "1.3.0"
description = "Abseil Python Common Libraries, see https://github.com/abseil/abseil-py."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "aiohttp"
version = "3.8.3"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["aiodns", "brotli", "cchardet"]

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "albumentations"
version = "1.3.0"
description = "Fast image augmentation library and easy to use wrapper around other libraries"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.11.1"
opencv-python-headless = ">=4.1.1"
PyYAML = "*"
qudida = ">=0.0.4"
scikit-image = ">=0.16.1"
scipy = "*"

[package.extras]
develop = ["pytest", "imgaug (>=0.4.0)"]
imgaug = ["imgaug (>=0.4.0)"]
tests = ["pytest"]

[[package]]
name = "alembic"
version = "1.8.1"
description = "A database migration tool for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
Mako = "*"
SQLAlchemy = ">=1.3.0"

[package.extras]
tz = ["python-dateutil"]

[[package]]
name = "antlr4-python3-runtime"
version = "4.9.3"
description = "ANTLR 4.9.3 runtime for Python 3.7"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "appdirs"
version = "1.4.4"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "astunparse"
version = "1.6.3"
description = "An AST unparser for Python"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
six = ">=1.6.1,<2.0"

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "automat"
version = "22.10.0"
description = "Self-service finite-state machines for the programmer on the go."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
attrs = ">=19.2.0"
six = "*"

[package.extras]
visualize = ["graphviz (>0.5.1)", "Twisted (>=16.1.1)"]

[[package]]
name = "autopage"
version = "0.5.1"
description = "A library to provide automatic paging for console output"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "bcrypt"
version = "4.0.1"
description = "Modern password hashing for your software and your servers"
category = "main"
optional = true
python-versions = ">=3.6"

[package.extras]
tests = ["pytest (>=3.2.1,!=3.3.0)"]
typecheck = ["mypy"]

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "main"
optional = true
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "bitstring"
version = "3.1.9"
description = "Simple construction, analysis and modification of binary data."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "black"
version = "22.10.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.7.4)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "board-automate"
version = "0.2.0"
description = "Automate remote exection on linux based embedded boards"
category = "main"
optional = true
python-versions = ">3.7.1,<4.0"

[package.dependencies]
coloredlogs = ">=10.0,<11.0"
fabric = ">=2.5,<3.0"
GitPython = ">=3.1.27,<4.0.0"
invoke = ">=1.3,<2.0"
jinja2 = ">3.0,<3.1"
jinjasql = {version = ">0.1.7", optional = true, markers = "extra == \"postgres\""}
keyring = ">=21.1.0,<22.0.0"
patchwork = ">=1.0,<2.0"
prompt_toolkit = ">=3.0,<4.0"
psycopg2-binary = {version = ">=2.8.6,<3.0.0", optional = true, markers = "extra == \"postgres\""}
pydantic = ">=1.2,<2.0"
pydot = {version = ">=1.4.1,<2.0.0", optional = true, markers = "extra == \"postgres\""}
python-dotenv = {version = ">=0.10.5,<0.11.0", optional = true, markers = "extra == \"postgres\""}
requests = ">=2.22,<3.0"
"ruamel.yaml" = ">=0.16.6,<0.17.0"
setproctitle = ">=1.1.10,<2.0.0"
tabulate = ">=0.8.6,<0.9.0"

[package.extras]
postgres = ["python-dotenv (>=0.10.5,<0.11.0)", "pydot (>=1.4.1,<2.0.0)", "jinjasql (>0.1.7)", "psycopg2-binary (>=2.8.6,<3.0.0)"]

[[package]]
name = "cachetools"
version = "5.2.0"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = "~=3.7"

[[package]]
name = "certifi"
version = "2022.9.24"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "chainmap"
version = "1.0.3"
description = "Backport/clone of ChainMap for py26, py32, and pypy3."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "charset-normalizer"
version = "2.1.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "cliff"
version = "4.0.0"
description = "Command Line Interface Formulation Framework"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
autopage = ">=0.4.0"
cmd2 = ">=1.0.0"
importlib-metadata = ">=4.4"
PrettyTable = ">=0.7.2"
PyYAML = ">=3.12"
stevedore = ">=2.0.1"

[[package]]
name = "cloudpickle"
version = "2.2.0"
description = "Extended pickling support for Python objects"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cmaes"
version = "0.8.2"
description = "Lightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES) implementation for Python 3."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = "*"

[[package]]
name = "cmd2"
version = "2.4.2"
description = "cmd2 - quickly build feature-rich and user-friendly interactive command line applications in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = ">=16.3.0"
pyperclip = ">=1.6"
pyreadline3 = {version = "*", markers = "sys_platform == \"win32\""}
wcwidth = ">=0.1.7"

[package.extras]
dev = ["codecov", "doc8", "flake8", "invoke", "mypy (==0.902)", "nox", "pytest (>=4.6)", "pytest-cov", "pytest-mock", "sphinx", "sphinx-rtd-theme", "sphinx-autobuild", "twine (>=1.11)"]
test = ["codecov", "coverage", "pytest (>=4.6)", "pytest-cov", "pytest-mock", "gnureadline"]
validate = ["flake8", "mypy (==0.902)", "types-pkg-resources"]

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "coloredlogs"
version = "10.0"
description = "Colored terminal output for Python's logging module"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
humanfriendly = ">=4.7"

[package.extras]
cron = ["capturer (>=2.4)"]

[[package]]
name = "colorlog"
version = "6.7.0"
description = "Add colours to the output of Python's logging module."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
development = ["black", "flake8", "mypy", "pytest", "types-colorama"]

[[package]]
name = "configparser"
version = "5.3.0"
description = "Updated configparser from stdlib for earlier Pythons."
category = "main"
optional = true
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "types-backports", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "constantly"
version = "15.1.0"
description = "Symbolic constants in Python"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "contourpy"
version = "1.0.6"
description = "Python library for calculating contours of 2D quadrilateral grids"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16"

[package.extras]
bokeh = ["bokeh", "selenium"]
docs = ["docutils (<0.18)", "sphinx (<=5.2.0)", "sphinx-rtd-theme"]
test = ["pytest", "matplotlib", "pillow", "flake8", "isort"]
test-minimal = ["pytest"]
test-no-codebase = ["pytest", "matplotlib", "pillow"]

[[package]]
name = "coverage"
version = "6.5.0"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "python_full_version <= \"3.11.0a6\" and extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "cryptography"
version = "38.0.3"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools-rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "main"
optional = true
python-versions = ">=3.5"

[[package]]
name = "dgl-cu102"
version = "0.6.1"
description = "Deep Graph Library"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
networkx = ">=2.1"
numpy = ">=1.14.0"
requests = ">=2.19.0"
scipy = ">=1.1.0"

[[package]]
name = "distlib"
version = "0.3.6"
description = "Distribution utilities"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "et-xmlfile"
version = "1.1.0"
description = "An implementation of lxml.xmlfile for the standard library"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "fabric"
version = "2.7.1"
description = "High level SSH command execution"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
invoke = ">=1.3,<2.0"
paramiko = ">=2.4"
pathlib2 = "*"

[package.extras]
pytest = ["mock (>=2.0.0,<3.0)", "pytest (>=3.2.5,<4.0)"]
testing = ["mock (>=2.0.0,<3.0)"]

[[package]]
name = "fairscale"
version = "0.4.12"
description = "FairScale: A PyTorch library for large-scale and high-performance training."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.22.0"
torch = ">=1.8.0"

[[package]]
name = "filelock"
version = "3.8.0"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.6.21)", "sphinx (>=5.1.1)", "sphinx-autodoc-typehints (>=1.19.1)"]
testing = ["covdefaults (>=2.2)", "coverage (>=6.4.2)", "pytest (>=7.1.2)", "pytest-cov (>=3)", "pytest-timeout (>=2.1)"]

[[package]]
name = "fire"
version = "0.4.0"
description = "A library for automatically generating command line interfaces."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"
termcolor = "*"

[[package]]
name = "flatbuffers"
version = "22.10.26"
description = "The FlatBuffers serialization format for Python"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "fonttools"
version = "4.38.0"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "frozenlist"
version = "1.3.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "fsspec"
version = "2022.10.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
aiohttp = {version = "<4.0.0a0 || >4.0.0a0,<4.0.0a1 || >4.0.0a1", optional = true, markers = "extra == \"http\""}
requests = {version = "*", optional = true, markers = "extra == \"http\""}

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dropbox = ["dropboxdrivefs", "requests", "dropbox"]
entrypoints = ["importlib-metadata"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["requests", "aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
tqdm = ["tqdm"]

[[package]]
name = "gast"
version = "0.4.0"
description = "Python AST that abstracts the underlying Python version"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "gdown"
version = "4.5.3"
description = "Google Drive direct download of big files."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
beautifulsoup4 = "*"
filelock = "*"
requests = {version = "*", extras = ["socks"]}
six = "*"
tqdm = "*"

[[package]]
name = "ghp-import"
version = "2.1.0"
description = "Copy your docs directly to the gh-pages branch."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.8.1"

[package.extras]
dev = ["twine", "markdown", "flake8", "wheel"]

[[package]]
name = "gitdb"
version = "4.0.9"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitdb2"
version = "2.0.6"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
smmap2 = ">=2.0.0"

[[package]]
name = "gitpython"
version = "3.1.29"
description = "GitPython is a python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[[package]]
name = "google-auth"
version = "2.14.0"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = {version = ">=3.1.4,<5", markers = "python_version >= \"3.6\""}
six = ">=1.9.0"

[package.extras]
aiohttp = ["requests (>=2.20.0,<3.0.0dev)", "aiohttp (>=3.6.2,<4.0.0dev)"]
enterprise_cert = ["cryptography (==36.0.2)", "pyopenssl (==22.0.0)"]
pyopenssl = ["pyopenssl (>=20.0.0)"]
reauth = ["pyu2f (>=0.1.5)"]

[[package]]
name = "google-auth-oauthlib"
version = "0.4.6"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
google-auth = ">=1.0.0"
requests-oauthlib = ">=0.7.0"

[package.extras]
tool = ["click (>=6.0.0)"]

[[package]]
name = "google-pasta"
version = "0.2.0"
description = "pasta is an AST-based Python refactoring library"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "graphviz"
version = "0.20.1"
description = "Simple Python interface for Graphviz"
category = "main"
optional = true
python-versions = ">=3.7"

[package.extras]
dev = ["tox (>=3)", "flake8", "pep8-naming", "wheel", "twine"]
docs = ["sphinx (>=5)", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
test = ["pytest (>=7)", "pytest-mock (>=3)", "mock (>=4)", "pytest-cov", "coverage"]

[[package]]
name = "greenlet"
version = "2.0.0"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx", "docutils (<0.18)"]
test = ["objgraph", "faulthandler"]

[[package]]
name = "griffe"
version = "0.23.0"
description = "Signatures for entire Python programs. Extract the structure, the frame, the skeleton of your project, to generate API documentation or find breaking changes in your API."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
async = ["aiofiles (>=0.7,<1.0)"]

[[package]]
name = "grpcio"
version = "1.50.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
six = ">=1.5.2"

[package.extras]
protobuf = ["grpcio-tools (>=1.50.0)"]

[[package]]
name = "h5py"
version = "3.7.0"
description = "Read and write HDF5 files from Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.14.5"

[[package]]
name = "hannah-tvm"
version = "0.1.0"
description = ""
category = "main"
optional = true
python-versions = ">3.7.1, <3.11"
develop = true

[package.dependencies]
appdirs = "^1.4.4"
board-automate = {version = ">=0.2.0", extras = ["postgres"], optional = true}
colorama = "^0.4.4"
configparser = "^5.0.2"
decorator = "^5.1.0"
fsspec = "^2022.8.2"
graphviz = ">=0.19.1"
hydra-core = "^1.1.0"
importlib-metadata = "^4.0.1"
matplotlib = "^3.4.3"
networkx = ">=2.6.3"
numpy = "^1.20.2"
onnx = "^1.8.1"
onnxoptimizer = ">=0.2.6"
openpyxl = "^3.0.7"
pandas = "<1.4.0"
prettytable = "^2.1.0"
PTable = {version = ">=0.9.2", optional = true}
pyelftools = "^0.27"
pyserial = {version = ">=3.5", optional = true}
pyvcd = "^0.2.4"
PyYAML = "^5.4.1"
SQLAlchemy = "^1.4.12"
tabulate = ">=0.8.9"
tensorflow = ">=2.7.0"
tflite = "^2.4.0"
torch = "1.12.0"
tqdm = "^4.62.3"
Twisted = "^21.2.0"
usb = {version = ">=0.0.83.dev0", optional = true}
west = {version = ">=0.13.1", optional = true}
xgboost = "1.5.2"
XlsxWriter = "^1.4.0"

[package.extras]
automate = ["board-automate[postgres] (>=0.2.0)"]
micro = ["pyserial (>=3.5)", "usb (>=0.0.83.dev0)", "PTable (>=0.9.2)", "west (>=0.13.1)"]
dash = ["dash (>=2.3.1,<3.0.0)"]

[package.source]
type = "directory"
url = "external/hannah-tvm"

[[package]]
name = "humanfriendly"
version = "10.0"
description = "Human friendly output for text interfaces using Python"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
pyreadline3 = {version = "*", markers = "sys_platform == \"win32\" and python_version >= \"3.8\""}

[[package]]
name = "hydra-colorlog"
version = "1.2.0"
description = "Enables colorlog for Hydra apps"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
colorlog = "*"
hydra-core = ">=1.0.0"

[[package]]
name = "hydra-core"
version = "1.2.0"
description = "A framework for elegantly configuring complex applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
antlr4-python3-runtime = ">=4.9.0,<4.10.0"
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
omegaconf = ">=2.2,<3.0"
packaging = "*"

[[package]]
name = "hydra-joblib-launcher"
version = "1.2.0"
description = "Joblib Launcher for Hydra apps"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
hydra-core = ">=1.1.0.dev7"
joblib = ">=0.14.0"

[[package]]
name = "hydra-optuna-sweeper"
version = "1.2.0"
description = "Hydra Optuna Sweeper plugin"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
hydra-core = ">=1.1.0.dev7"
optuna = ">=2.10.0,<3.0.0"

[[package]]
name = "hydra-submitit-launcher"
version = "1.2.0"
description = "Submitit Launcher for Hydra apps"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
hydra-core = ">=1.1.0.dev7"
submitit = ">=1.3.3"

[[package]]
name = "hyperlink"
version = "21.0.0"
description = "A featureful, immutable, and correct URL for Python."
category = "main"
optional = true
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
idna = ">=2.5"

[[package]]
name = "identify"
version = "2.5.8"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagecorruptions"
version = "1.1.2"
description = "This package provides a set of image corruptions."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
numpy = ">=1.16"
opencv-python = ">=3.4.5"
Pillow = ">=5.4.1"
scikit-image = ">=0.15"
scipy = ">=1.2.1"

[[package]]
name = "imageio"
version = "2.22.3"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = true
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av (!=10.0.0)", "imageio-ffmpeg", "opencv-python", "psutil", "tifffile"]
all-plugins-pypy = ["av (!=10.0.0)", "imageio-ffmpeg", "psutil", "tifffile"]
build = ["wheel"]
dev = ["invoke", "pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av (!=10.0.0)", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "invoke", "itk", "numpydoc", "opencv-python", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "sphinx", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
opencv = ["opencv-python"]
pyav = ["av (!=10.0.0)"]
test = ["invoke", "pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "importlib-metadata"
version = "4.13.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.10.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "incremental"
version = "22.10.0"
description = "\"A small library that versions your Python projects.\""
category = "main"
optional = true
python-versions = "*"

[package.extras]
mypy = ["click (>=6.0)", "twisted (>=16.4.0)", "mypy (==0.812)"]
scripts = ["click (>=6.0)", "twisted (>=16.4.0)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "invoke"
version = "1.7.3"
description = "Pythonic task execution"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "isort"
version = "5.10.1"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.6.1,<4.0"

[package.extras]
pipfile_deprecated_finder = ["pipreqs", "requirementslib"]
requirements_deprecated_finder = ["pipreqs", "pip-api"]
colors = ["colorama (>=0.4.3,<0.5.0)"]
plugins = ["setuptools"]

[[package]]
name = "jeepney"
version = "0.8.0"
description = "Low-level, pure Python DBus protocol wrapper."
category = "main"
optional = true
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "pytest-trio", "pytest-asyncio (>=0.17)", "testpath", "trio", "async-timeout"]
trio = ["trio", "async-generator"]

[[package]]
name = "jinja2"
version = "3.0.3"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jinjasql"
version = "0.1.8"
description = "Generate SQL Queries and Corresponding Bind Parameters using a Jinja2 Template"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
Jinja2 = ">=2.5"

[[package]]
name = "joblib"
version = "1.2.0"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "keras"
version = "2.10.0"
description = "Deep learning for humans."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "keras-preprocessing"
version = "1.1.2"
description = "Easy data preprocessing and data augmentation for deep learning models"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
numpy = ">=1.9.1"
six = ">=1.9.0"

[package.extras]
image = ["scipy (>=0.14)", "Pillow (>=5.2.0)"]
pep8 = ["flake8"]
tests = ["pandas", "pillow", "tensorflow", "keras", "pytest", "pytest-xdist", "pytest-cov"]

[[package]]
name = "keyring"
version = "21.8.0"
description = "Store and access your passwords safely."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
jeepney = {version = ">=0.4.2", markers = "sys_platform == \"linux\""}
pywin32-ctypes = {version = "<0.1.0 || >0.1.0,<0.1.1 || >0.1.1", markers = "sys_platform == \"win32\""}
SecretStorage = {version = ">=3.2", markers = "sys_platform == \"linux\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,!=3.7.3)", "pytest-checkdocs (>=1.2.3)", "pytest-flake8", "pytest-cov", "jaraco.test (>=3.2.0)", "pytest-black (>=0.3.7)", "pytest-mypy"]

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "kornia"
version = "0.6.8"
description = "Open Source Differentiable Computer Vision Library for PyTorch"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
packaging = "*"
torch = ">=1.8.1"

[package.extras]
dev = ["flake8 (==5.0.4)", "isort", "numpy", "opencv-python", "pre-commit (>=2.0)", "pydocstyle", "pytest (==7.1.3)", "pytest-cov (==4.0.0)", "pytest-mypy (==0.10.0)", "scipy", "kornia-rs (==0.0.5)"]
docs = ["PyYAML (>=5.1,<6.1.0)", "furo", "matplotlib", "opencv-python", "sphinx (>=4.0)", "sphinx-autodoc-defaultargs", "sphinx-autodoc-typehints (>=1.0)", "sphinx-copybutton (>=0.3)", "sphinx-design", "sphinx-rtd-theme (>0.5)", "sphinxcontrib-bibtex", "sphinxcontrib-gtagjs", "sphinxcontrib-youtube", "torch", "torchvision"]
x = ["accelerate (==0.13.1)", "dataclasses"]

[[package]]
name = "libclang"
version = "14.0.6"
description = "Clang Python Bindings, mirrored from the official LLVM repo: https://github.com/llvm/llvm-project/tree/main/clang/bindings/python, to make the installation process easier."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "libsvm"
version = "3.23.0.4"
description = "Pre-built LibSVM packages for Python."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["pytest", "pytest-pep8", "pytest-cov"]

[[package]]
name = "lightning-bolts"
version = "0.3.4"
description = "PyTorch Lightning Bolts is a community contribution for ML researchers."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
packaging = "*"
pytorch-lightning = ">=1.1.1"
torch = ">=1.6"
torchmetrics = ">=0.2.0"

[package.extras]
dev = ["torchvision (>=0.7)", "scikit-learn (>=0.23)", "pillow", "opencv-python-headless", "gym (>=0.17.2)", "atari-py (>=0.2.0,<0.3.0)", "box2d-py (>=2.3.0,<2.4.0)", "matplotlib", "wandb", "scipy", "codecov (>=2.1)", "pytest (>=6.0)", "pytest-cov (>2.10)", "flake8", "check-manifest", "twine (>=3.2)", "isort (>=5.6.4)", "pre-commit (>=1.0)", "mypy (>=0.790)", "yapf (>=0.29.0)", "atari-py (==0.2.6)"]
extra = ["torchvision (>=0.7)", "scikit-learn (>=0.23)", "pillow", "opencv-python-headless", "gym (>=0.17.2)", "atari-py (>=0.2.0,<0.3.0)", "box2d-py (>=2.3.0,<2.4.0)", "matplotlib", "wandb", "scipy"]
loggers = ["matplotlib", "wandb", "scipy"]
models = ["torchvision (>=0.7)", "scikit-learn (>=0.23)", "pillow", "opencv-python-headless", "gym (>=0.17.2)", "atari-py (>=0.2.0,<0.3.0)", "box2d-py (>=2.3.0,<2.4.0)"]
test = ["codecov (>=2.1)", "pytest (>=6.0)", "pytest-cov (>2.10)", "flake8", "check-manifest", "twine (>=3.2)", "isort (>=5.6.4)", "pre-commit (>=1.0)", "mypy (>=0.790)", "yapf (>=0.29.0)", "atari-py (==0.2.6)", "scikit-learn (>=0.23)"]

[[package]]
name = "lightning-lite"
version = "1.8.0.post1"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fsspec = {version = ">2021.06.0", extras = ["http"]}
lightning-utilities = ">=0.3.0,<0.4.0"
numpy = ">=1.17.2"
packaging = ">=17.0"
torch = ">=1.9"
typing-extensions = ">=4.0.0"

[package.extras]
all = ["coverage (==6.4.2)", "codecov (==2.1.12)", "pytest (==7.1.3)", "pytest-cov (==3.0.0)", "pre-commit (==2.20.0)", "fairscale (>=0.4.5)", "deepspeed (>=0.6.0)"]
deepspeed = ["deepspeed (>=0.6.0)"]
dev = ["coverage (==6.4.2)", "codecov (==2.1.12)", "pytest (==7.1.3)", "pytest-cov (==3.0.0)", "pre-commit (==2.20.0)"]
fairscale = ["fairscale (>=0.4.5)"]
strategies = ["fairscale (>=0.4.5)", "deepspeed (>=0.6.0)"]
test = ["coverage (==6.4.2)", "codecov (==2.1.12)", "pytest (==7.1.3)", "pytest-cov (==3.0.0)", "pre-commit (==2.20.0)"]

[[package]]
name = "lightning-utilities"
version = "0.3.0"
description = "PyTorch Lightning Sample project."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fire = "*"

[[package]]
name = "mako"
version = "1.2.3"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]
testing = ["pytest"]

[[package]]
name = "markdown"
version = "3.3.7"
description = "Python implementation of Markdown."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}

[package.extras]
testing = ["coverage", "pyyaml"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.6.2"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
contourpy = ">=1.0.1"
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.19"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=7"

[[package]]
name = "mergedeep"
version = "1.3.4"
description = "A deep merge function for 🐍."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mkdocs"
version = "1.4.2"
description = "Project documentation with Markdown."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=7.0"
colorama = {version = ">=0.4", markers = "platform_system == \"Windows\""}
ghp-import = ">=1.0"
importlib-metadata = {version = ">=4.3", markers = "python_version < \"3.10\""}
jinja2 = ">=2.11.1"
markdown = ">=3.2.1,<3.4"
mergedeep = ">=1.3.4"
packaging = ">=20.5"
pyyaml = ">=5.1"
pyyaml-env-tag = ">=0.1"
watchdog = ">=2.0"

[package.extras]
i18n = ["babel (>=2.9.0)"]
min-versions = ["babel (==2.9.0)", "click (==7.0)", "colorama (==0.4)", "ghp-import (==1.0)", "importlib-metadata (==4.3)", "jinja2 (==2.11.1)", "markdown (==3.2.1)", "markupsafe (==2.0.1)", "mergedeep (==1.3.4)", "packaging (==20.5)", "pyyaml-env-tag (==0.1)", "pyyaml (==5.1)", "typing-extensions (==3.10)", "watchdog (==2.0)"]

[[package]]
name = "mkdocs-autorefs"
version = "0.4.1"
description = "Automatically link across pages in MkDocs."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Markdown = ">=3.3"
mkdocs = ">=1.1"

[[package]]
name = "mkdocs-gen-files"
version = "0.3.5"
description = "MkDocs plugin to programmatically generate documentation pages during the build"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
mkdocs = ">=1.0.3,<2.0.0"

[[package]]
name = "mkdocs-literate-nav"
version = "0.4.1"
description = "MkDocs plugin to specify the navigation in Markdown instead of YAML"
category = "dev"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
mkdocs = ">=1.0.3,<2.0.0"

[[package]]
name = "mkdocstrings"
version = "0.19.0"
description = "Automatic documentation from sources, for MkDocs."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Jinja2 = ">=2.11.1"
Markdown = ">=3.3"
MarkupSafe = ">=1.1"
mkdocs = ">=1.2"
mkdocs-autorefs = ">=0.3.1"
mkdocstrings-python = {version = ">=0.5.2", optional = true, markers = "extra == \"python\""}
pymdown-extensions = ">=6.3"

[package.extras]
crystal = ["mkdocstrings-crystal (>=0.3.4)"]
python = ["mkdocstrings-python (>=0.5.2)"]
python-legacy = ["mkdocstrings-python-legacy (>=0.2.1)"]

[[package]]
name = "mkdocstrings-python"
version = "0.7.1"
description = "A Python handler for mkdocstrings."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
griffe = ">=0.11.1"
mkdocstrings = ">=0.19"

[[package]]
name = "mpmath"
version = "1.2.1"
description = "Python library for arbitrary-precision floating-point arithmetic"
category = "main"
optional = false
python-versions = "*"

[package.extras]
develop = ["pytest (>=4.6)", "pycodestyle", "pytest-cov", "codecov", "wheel"]
tests = ["pytest (>=4.6)"]

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mypy"
version = "0.910"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
mypy-extensions = ">=0.4.3,<0.5.0"
toml = "*"
typing-extensions = ">=3.7.4"

[package.extras]
dmypy = ["psutil (>=4.0)"]
python2 = ["typed-ast (>=1.4.0,<1.5.0)"]

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "networkx"
version = "2.8.8"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = true
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=2.20)", "mypy (>=0.982)"]
doc = ["sphinx (>=5.2)", "pydata-sphinx-theme (>=0.11)", "sphinx-gallery (>=0.11)", "numpydoc (>=1.5)", "pillow (>=9.2)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)", "codecov (>=2.1)"]

[[package]]
name = "nodeenv"
version = "1.7.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[[package]]
name = "numpy"
version = "1.23.4"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "nvsmi"
version = "0.4.2"
description = "A (user-)friendly wrapper to nvidia-smi"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "oauthlib"
version = "3.2.2"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "omegaconf"
version = "2.2.3"
description = "A flexible configuration library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
antlr4-python3-runtime = ">=4.9.0,<4.10.0"
PyYAML = ">=5.1.0"

[[package]]
name = "onnx"
version = "1.12.0"
description = "Open Neural Network Exchange"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
numpy = ">=1.16.6"
protobuf = ">=3.12.2,<=3.20.1"
typing-extensions = ">=3.6.2.1"

[package.extras]
lint = ["clang-format (==13.0.0)", "flake8", "mypy (==0.782)", "types-protobuf (==3.18.4)"]

[[package]]
name = "onnx-tf"
version = "1.10.0"
description = "Tensorflow backend for ONNX (Open Neural Network Exchange)."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
onnx = ">=1.10.2"
PyYAML = "*"
tensorflow-addons = "*"

[[package]]
name = "onnxoptimizer"
version = "0.3.1"
description = "Open Neural Network Exchange"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
onnx = "*"

[package.extras]
mypy = ["mypy (==0.600)"]

[[package]]
name = "onnxruntime"
version = "1.13.1"
description = "ONNX Runtime is a runtime accelerator for Machine Learning models"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
coloredlogs = "*"
flatbuffers = "*"
numpy = ">=1.21.6"
packaging = "*"
protobuf = "*"
sympy = "*"

[[package]]
name = "opencv-python"
version = "4.6.0.66"
description = "Wrapper package for OpenCV python bindings."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
numpy = [
    {version = ">=1.21.2", markers = "python_version >= \"3.10\" or python_version >= \"3.6\" and platform_system == \"Darwin\" and platform_machine == \"arm64\""},
    {version = ">=1.19.3", markers = "python_version >= \"3.6\" and platform_system == \"Linux\" and platform_machine == \"aarch64\" or python_version >= \"3.9\""},
    {version = ">=1.14.5", markers = "python_version >= \"3.7\""},
    {version = ">=1.17.3", markers = "python_version >= \"3.8\""},
]

[[package]]
name = "opencv-python-headless"
version = "4.6.0.66"
description = "Wrapper package for OpenCV python bindings."
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
numpy = [
    {version = ">=1.21.2", markers = "python_version >= \"3.10\" or python_version >= \"3.6\" and platform_system == \"Darwin\" and platform_machine == \"arm64\""},
    {version = ">=1.19.3", markers = "python_version >= \"3.6\" and platform_system == \"Linux\" and platform_machine == \"aarch64\" or python_version >= \"3.9\""},
    {version = ">=1.14.5", markers = "python_version >= \"3.7\""},
    {version = ">=1.17.3", markers = "python_version >= \"3.8\""},
]

[[package]]
name = "openpyxl"
version = "3.0.10"
description = "A Python library to read/write Excel 2010 xlsx/xlsm files"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
et-xmlfile = "*"

[[package]]
name = "opt-einsum"
version = "3.3.0"
description = "Optimizing numpys einsum function"
category = "main"
optional = true
python-versions = ">=3.5"

[package.dependencies]
numpy = ">=1.7"

[package.extras]
docs = ["sphinx (==1.2.3)", "sphinxcontrib-napoleon", "sphinx-rtd-theme", "numpydoc"]
tests = ["pytest", "pytest-cov", "pytest-pep8"]

[[package]]
name = "optuna"
version = "2.10.1"
description = "A hyperparameter optimization framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
alembic = "*"
cliff = "*"
cmaes = ">=0.8.2"
colorlog = "*"
numpy = "*"
packaging = ">=20.0"
PyYAML = "*"
scipy = "!=1.4.0"
sqlalchemy = ">=1.1.0"
tqdm = "*"

[package.extras]
benchmark = ["asv", "virtualenv"]
checking = ["black", "hacking", "isort", "mypy (==0.790)", "blackdoc"]
codecov = ["codecov", "pytest-cov"]
doctest = ["cma", "matplotlib (>=3.0.0)", "pandas", "plotly (>=4.0.0)", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "mlflow"]
document = ["Jinja2 (<3.0.0)", "MarkupSafe (<=2.0.1)", "sphinx (<=3.5.4)", "sphinx-rtd-theme (<=1.0.0)", "sphinx-copybutton (<=0.4.0)", "sphinx-gallery (<=0.10.0)", "sphinx-plotly-directive (<=0.1.3)", "pillow", "matplotlib", "scikit-learn (<1.0.0)", "plotly (>=4.0.0)", "pandas", "lightgbm", "torch (==1.8.0)", "torchvision (==0.9.0)", "torchaudio (==0.8.0)", "thop"]
experimental = ["redis"]
integration = ["chainer (>=5.0.0)", "cma", "lightgbm", "mlflow", "wandb", "mpi4py", "mxnet", "pandas", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "xgboost", "tensorflow", "tensorflow-datasets", "pytorch-ignite", "pytorch-lightning (>=1.0.2)", "skorch", "catalyst (>=21.3)", "torchaudio (==0.8.0)", "allennlp (>=2.2.0,<2.7.0)", "fastai", "botorch (>=0.4.0)", "torch (==1.8.0+cpu)", "torchvision (==0.9.0+cpu)", "torch (==1.8.0)", "torchvision (==0.9.0)"]
optional = ["bokeh (<2.0.0)", "matplotlib (>=3.0.0)", "pandas", "plotly (>=4.0.0)", "redis", "scikit-learn (>=0.24.2,<1.0.0)"]
testing = ["bokeh (<2.0.0)", "chainer (>=5.0.0)", "cma", "fakeredis", "lightgbm", "matplotlib (>=3.0.0)", "mlflow", "mpi4py", "mxnet", "pandas", "plotly (>=4.0.0)", "pytest", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "xgboost", "tensorflow", "tensorflow-datasets", "pytorch-ignite", "pytorch-lightning (>=1.0.2)", "skorch", "catalyst (>=21.3)", "torchaudio (==0.8.0)", "allennlp (>=2.2.0,<2.7.0)", "fastai", "botorch (>=0.4.0)", "torch (==1.8.0+cpu)", "torchvision (==0.9.0+cpu)", "torch (==1.8.0)", "torchvision (==0.9.0)"]
tests = ["fakeredis", "pytest"]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.3.5"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.7.1"

[package.dependencies]
numpy = [
    {version = ">=1.17.3", markers = "platform_machine != \"aarch64\" and platform_machine != \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.19.2", markers = "platform_machine == \"aarch64\" and python_version < \"3.10\""},
    {version = ">=1.20.0", markers = "platform_machine == \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
]
python-dateutil = ">=2.7.3"
pytz = ">=2017.3"

[package.extras]
test = ["hypothesis (>=3.58)", "pytest (>=6.0)", "pytest-xdist"]

[[package]]
name = "paramiko"
version = "2.11.0"
description = "SSH2 protocol library"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
bcrypt = ">=3.1.3"
cryptography = ">=2.5"
pynacl = ">=1.0.1"
six = "*"

[package.extras]
all = ["pyasn1 (>=0.1.7)", "pynacl (>=1.0.1)", "bcrypt (>=3.1.3)", "invoke (>=1.3)", "gssapi (>=1.4.1)", "pywin32 (>=2.1.8)"]
ed25519 = ["pynacl (>=1.0.1)", "bcrypt (>=3.1.3)"]
gssapi = ["pyasn1 (>=0.1.7)", "gssapi (>=1.4.1)", "pywin32 (>=2.1.8)"]
invoke = ["invoke (>=1.3)"]

[[package]]
name = "patchwork"
version = "1.0.1"
description = "Deployment/sysadmin operations, powered by Fabric"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
fabric = ">=2.0,<3.0"

[[package]]
name = "pathlib2"
version = "2.3.7.post1"
description = "Object-oriented filesystem paths"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "pathspec"
version = "0.10.1"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pbr"
version = "5.11.0"
description = "Python Build Reasonableness"
category = "main"
optional = false
python-versions = ">=2.6"

[[package]]
name = "pillow"
version = "9.3.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2021.7.5b38)", "proselint (>=0.10.2)", "sphinx-autodoc-typehints (>=1.12)", "sphinx (>=4)"]
test = ["appdirs (==1.4.4)", "pytest-cov (>=2.7)", "pytest-mock (>=3.6)", "pytest (>=6)"]

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "pre-commit"
version = "2.20.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "prettytable"
version = "2.5.0"
description = "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
wcwidth = "*"

[package.extras]
tests = ["pytest", "pytest-cov", "pytest-lazy-fixture"]

[[package]]
name = "prompt-toolkit"
version = "3.0.32"
description = "Library for building powerful interactive command lines in Python"
category = "main"
optional = true
python-versions = ">=3.6.2"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "protobuf"
version = "3.19.6"
description = "Protocol Buffers"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "psycopg2-binary"
version = "2.9.5"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "ptable"
version = "0.9.2"
description = "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "pwlf"
version = "2.2.1"
description = "fit piecewise linear functions to data"
category = "main"
optional = false
python-versions = ">3.5"

[package.dependencies]
numpy = ">=1.14.0"
pyDOE = ">=0.3.8"
scipy = ">=1.2.0"

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pyasn1"
version = "0.4.8"
description = "ASN.1 types and codecs"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyasn1-modules"
version = "0.2.8"
description = "A collection of ASN.1-based protocols modules."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.5.0"

[[package]]
name = "pycocotools"
version = "2.0.5"
description = "Official APIs for the MS-COCO dataset"
category = "main"
optional = true
python-versions = ">=3.5"

[package.dependencies]
matplotlib = ">=2.1.0"
numpy = "*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydantic"
version = "1.10.2"
description = "Data validation and settings management using python type hints"
category = "main"
optional = true
python-versions = ">=3.7"

[package.dependencies]
typing-extensions = ">=4.1.0"

[package.extras]
dotenv = ["python-dotenv (>=0.10.4)"]
email = ["email-validator (>=1.0.3)"]

[[package]]
name = "pydoe"
version = "0.3.8"
description = "Design of experiments for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
scipy = "*"

[[package]]
name = "pydot"
version = "1.4.2"
description = "Python interface to Graphviz's Dot"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = ">=2.1.4"

[[package]]
name = "pyelftools"
version = "0.27"
description = "Library for analyzing ELF files and DWARF debugging information"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "pykwalify"
version = "1.8.0"
description = "Python lib/cli for JSON/YAML schema validation"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
docopt = ">=0.6.2"
python-dateutil = ">=2.8.0"
"ruamel.yaml" = ">=0.16.0"

[[package]]
name = "pymdown-extensions"
version = "9.7"
description = "Extension pack for Python Markdown."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
markdown = ">=3.2"

[[package]]
name = "pyment"
version = "0.3.3"
description = "Generate/convert automatically the docstrings from code signature"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pynacl"
version = "1.5.0"
description = "Python binding to the Networking and Cryptography (NaCl) library"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.4.1"

[package.extras]
docs = ["sphinx (>=1.6.5)", "sphinx-rtd-theme"]
tests = ["pytest (>=3.2.1,!=3.3.0)", "hypothesis (>=3.27.0)"]

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyperclip"
version = "1.8.2"
description = "A cross-platform clipboard module for Python. (Only handles plain text for now.)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyreadline3"
version = "3.4.1"
description = "A python implementation of GNU readline."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyserial"
version = "3.5"
description = "Python Serial Port Extension"
category = "main"
optional = true
python-versions = "*"

[package.extras]
cp2110 = ["hidapi"]

[[package]]
name = "pysocks"
version = "1.7.1"
description = "A Python SOCKS client module. See https://github.com/Anorov/PySocks for more information."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pytest"
version = "6.2.5"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "4.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "six", "pytest-xdist", "virtualenv"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-dotenv"
version = "0.10.5"
description = "Add .env support to your django/flask apps in development and deployments"
category = "main"
optional = true
python-versions = "*"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "pytorch-lightning"
version = "1.8.0.post1"
description = "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fsspec = {version = ">2021.06.0", extras = ["http"]}
lightning-lite = "1.8.0.post1"
lightning-utilities = ">=0.3.0,<0.4.0"
numpy = ">=1.17.2"
packaging = ">=17.0"
PyYAML = ">=5.4"
tensorboard = ">=2.9.1"
torch = ">=1.9"
torchmetrics = ">=0.7.0"
tqdm = ">=4.57.0"
typing-extensions = ">=4.0.0"

[package.extras]
all = ["matplotlib (>3.1)", "omegaconf (>=2.0.5)", "hydra-core (>=1.0.5)", "jsonargparse[signatures] (>=4.15.2)", "rich (>=10.14.0,!=10.15.0.a)", "protobuf (<=3.20.1)", "coverage (==6.4.2)", "codecov (==2.1.12)", "pytest (==7.1.3)", "pytest-cov (==3.0.0)", "pytest-forked (==1.4.0)", "pytest-rerunfailures (==10.2)", "pre-commit (==2.20.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnxruntime", "psutil", "pandas (>1.0)", "fastapi", "uvicorn", "torchvision (>=0.10)", "gym[classic_control] (>=0.17.0)", "ipython", "colossalai (>=0.1.10)", "fairscale (>=0.4.5)", "deepspeed (>=0.6.0)", "horovod (>=0.21.2,!=0.24.0)", "hivemind (>=1.0.1)"]
colossalai = ["colossalai (>=0.1.10)"]
deepspeed = ["deepspeed (>=0.6.0)"]
dev = ["matplotlib (>3.1)", "omegaconf (>=2.0.5)", "hydra-core (>=1.0.5)", "jsonargparse[signatures] (>=4.15.2)", "rich (>=10.14.0,!=10.15.0.a)", "protobuf (<=3.20.1)", "coverage (==6.4.2)", "codecov (==2.1.12)", "pytest (==7.1.3)", "pytest-cov (==3.0.0)", "pytest-forked (==1.4.0)", "pytest-rerunfailures (==10.2)", "pre-commit (==2.20.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnxruntime", "psutil", "pandas (>1.0)", "fastapi", "uvicorn"]
examples = ["torchvision (>=0.10)", "gym[classic_control] (>=0.17.0)", "ipython"]
extra = ["matplotlib (>3.1)", "omegaconf (>=2.0.5)", "hydra-core (>=1.0.5)", "jsonargparse[signatures] (>=4.15.2)", "rich (>=10.14.0,!=10.15.0.a)", "protobuf (<=3.20.1)"]
fairscale = ["fairscale (>=0.4.5)"]
hivemind = ["hivemind (>=1.0.1)"]
horovod = ["horovod (>=0.21.2,!=0.24.0)"]
strategies = ["colossalai (>=0.1.10)", "fairscale (>=0.4.5)", "deepspeed (>=0.6.0)", "horovod (>=0.21.2,!=0.24.0)", "hivemind (>=1.0.1)"]
test = ["coverage (==6.4.2)", "codecov (==2.1.12)", "pytest (==7.1.3)", "pytest-cov (==3.0.0)", "pytest-forked (==1.4.0)", "pytest-rerunfailures (==10.2)", "pre-commit (==2.20.0)", "cloudpickle (>=1.3)", "scikit-learn (>0.22.1)", "onnxruntime", "psutil", "pandas (>1.0)", "fastapi", "uvicorn"]

[[package]]
name = "pytz"
version = "2022.6"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyvcd"
version = "0.2.4"
description = "Python VCD file support"
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "pywavelets"
version = "1.4.1"
description = "PyWavelets, wavelet transform module"
category = "main"
optional = true
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.17.3"

[[package]]
name = "pywin32-ctypes"
version = "0.2.0"
description = ""
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "pyyaml-env-tag"
version = "0.1"
description = "A custom YAML tag for referencing environment variables in YAML files. "
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyyaml = "*"

[[package]]
name = "qudida"
version = "0.0.4"
description = "QUick and DIrty Domain Adaptation"
category = "main"
optional = true
python-versions = ">=3.5.0"

[package.dependencies]
numpy = ">=0.18.0"
opencv-python-headless = ">=4.0.1"
scikit-learn = ">=0.19.1"
typing-extensions = "*"

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
PySocks = {version = ">=1.5.6,<1.5.7 || >1.5.7", optional = true, markers = "extra == \"socks\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-oauthlib"
version = "1.3.1"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
oauthlib = ">=3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "rope"
version = "0.19.0"
description = "a python refactoring library..."
category = "dev"
optional = false
python-versions = "*"

[package.extras]
dev = ["pytest"]

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "ruamel.yaml"
version = "0.16.13"
description = "ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
"ruamel.yaml.clib" = {version = ">=0.1.2", markers = "platform_python_implementation == \"CPython\" and python_version < \"3.10\""}

[package.extras]
docs = ["ryd"]
jinja2 = ["ruamel.yaml.jinja2 (>=0.2)"]

[[package]]
name = "ruamel.yaml.clib"
version = "0.2.7"
description = "C version of reader, parser and emitter for ruamel.yaml derived from libyaml"
category = "main"
optional = true
python-versions = ">=3.5"

[[package]]
name = "scikit-image"
version = "0.19.3"
description = "Image processing in Python"
category = "main"
optional = true
python-versions = ">=3.7"

[package.dependencies]
imageio = ">=2.4.1"
networkx = ">=2.2"
numpy = ">=1.17.0"
packaging = ">=20.0"
pillow = ">=6.1.0,<7.1.0 || >7.1.0,<7.1.1 || >7.1.1,<8.3.0 || >8.3.0"
PyWavelets = ">=1.1.1"
scipy = ">=1.4.1"
tifffile = ">=2019.7.26"

[package.extras]
data = ["pooch (>=1.3.0)"]
docs = ["sphinx (>=1.8)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.0)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.3)", "dask[array] (>=0.15.0,!=2.17.0)", "cloudpickle (>=0.2.1)", "pandas (>=0.23.0)", "seaborn (>=0.7.1)", "pooch (>=1.3.0)", "tifffile (>=2020.5.30)", "myst-parser", "ipywidgets", "plotly (>=4.14.0)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pyamg", "qtpy"]
test = ["asv", "codecov", "flake8", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scikit-learn"
version = "1.1.3"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.0.0"
numpy = ">=1.17.3"
scipy = ">=1.3.2"
threadpoolctl = ">=2.0.0"

[package.extras]
benchmark = ["matplotlib (>=3.1.2)", "pandas (>=1.0.5)", "memory-profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.1.2)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)", "memory-profiler (>=0.57.0)", "sphinx (>=4.0.1)", "sphinx-gallery (>=0.7.0)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "sphinx-prompt (>=1.3.0)", "sphinxext-opengraph (>=0.4.2)"]
examples = ["matplotlib (>=3.1.2)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "seaborn (>=0.9.0)"]
tests = ["matplotlib (>=3.1.2)", "scikit-image (>=0.16.2)", "pandas (>=1.0.5)", "pytest (>=5.0.1)", "pytest-cov (>=2.9.0)", "flake8 (>=3.8.2)", "black (>=22.3.0)", "mypy (>=0.961)", "pyamg (>=4.0.0)", "numpydoc (>=1.2.0)"]

[[package]]
name = "scipy"
version = "1.9.3"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.18.5,<1.26.0"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack"]
doc = ["sphinx (!=4.1.0)", "pydata-sphinx-theme (==0.9.0)", "sphinx-panels (>=0.5.2)", "matplotlib (>2)", "numpydoc", "sphinx-tabs"]
dev = ["mypy", "typing-extensions", "pycodestyle", "flake8"]

[[package]]
name = "seaborn"
version = "0.11.2"
description = "seaborn: statistical data visualization"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
matplotlib = ">=2.2"
numpy = ">=1.15"
pandas = ">=0.23"
scipy = ">=1.0"

[[package]]
name = "secretstorage"
version = "3.3.3"
description = "Python bindings to FreeDesktop.org Secret Service API"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=2.0"
jeepney = ">=0.6"

[[package]]
name = "setproctitle"
version = "1.3.2"
description = "A Python module to customize the process title"
category = "main"
optional = true
python-versions = ">=3.7"

[package.extras]
test = ["pytest"]

[[package]]
name = "setuptools-scm"
version = "7.0.5"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=20.0"
tomli = ">=1.0.0"
typing-extensions = "*"

[package.extras]
test = ["pytest (>=6.2)", "virtualenv (>20)"]
toml = ["setuptools (>=42)"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "smmap2"
version = "3.0.1"
description = "A mirror package for smmap"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
smmap = ">=3.0.1"

[[package]]
name = "soundfile"
version = "0.10.3.post1"
description = "An audio library based on libsndfile, CFFI and NumPy"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cffi = ">=1.0"

[package.extras]
numpy = ["numpy"]

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = true
python-versions = ">=3.6"

[[package]]
name = "sqlalchemy"
version = "1.4.42"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql"]
aiosqlite = ["typing_extensions (!=3.10.0.1)", "greenlet (!=0.4.17)", "aiosqlite"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
mariadb_connector = ["mariadb (>=1.0.1,!=1.1.2)"]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mypy = ["sqlalchemy2-stubs", "mypy (>=0.910)"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql_connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql_asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql_pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql (<1)", "pymysql"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "stevedore"
version = "4.1.0"
description = "Manage dynamic plugins for Python applications"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pbr = ">=2.0.0,<2.1.0 || >2.1.0"

[[package]]
name = "submitit"
version = "1.4.5"
description = "\"Python 3.6+ toolbox for submitting jobs to Slurm"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cloudpickle = ">=1.2.1"
typing_extensions = ">=3.7.4.2"

[package.extras]
dev = ["pytest (>=4.3.0)", "pytest-asyncio (>=0.15.0)", "pytest-cov (>=2.6.1)", "coverage[toml] (>=5.1)", "black (==22.3.0)", "isort (==5.5.3)", "pre-commit (>=1.15.2)", "mypy (>=0.971)", "types-pkg_resources (>=0.1.2)", "pylint (>=2.14.0)", "flit (>=3.5.1)"]

[[package]]
name = "sympy"
version = "1.11.1"
description = "Computer algebra system (CAS) in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mpmath = ">=0.19"

[[package]]
name = "tabulate"
version = "0.8.10"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "tensorboard"
version = "2.10.1"
description = "TensorBoard lets you watch Tensors Flow"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
absl-py = ">=0.4"
google-auth = ">=1.6.3,<3"
google-auth-oauthlib = ">=0.4.1,<0.5"
grpcio = ">=1.24.3"
markdown = ">=2.6.8"
numpy = ">=1.12.0"
protobuf = ">=3.9.2,<3.20"
requests = ">=2.21.0,<3"
tensorboard-data-server = ">=0.6.0,<0.7.0"
tensorboard-plugin-wit = ">=1.6.0"
werkzeug = ">=1.0.1"

[[package]]
name = "tensorboard-data-server"
version = "0.6.1"
description = "Fast data loading for TensorBoard"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tensorboard-plugin-wit"
version = "1.8.1"
description = "What-If Tool TensorBoard plugin."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "tensorflow"
version = "2.10.0"
description = "TensorFlow is an open source machine learning framework for everyone."
category = "main"
optional = true
python-versions = ">=3.7"

[package.dependencies]
absl-py = ">=1.0.0"
astunparse = ">=1.6.0"
flatbuffers = ">=2.0"
gast = ">=0.2.1,<=0.4.0"
google-pasta = ">=0.1.1"
grpcio = ">=1.24.3,<2.0"
h5py = ">=2.9.0"
keras = ">=2.10.0,<2.11"
keras-preprocessing = ">=1.1.1"
libclang = ">=13.0.0"
numpy = ">=1.20"
opt-einsum = ">=2.3.2"
packaging = "*"
protobuf = ">=3.9.2,<3.20"
six = ">=1.12.0"
tensorboard = ">=2.10,<2.11"
tensorflow-estimator = ">=2.10.0,<2.11"
tensorflow-io-gcs-filesystem = ">=0.23.1"
termcolor = ">=1.1.0"
typing-extensions = ">=3.6.6"
wrapt = ">=1.11.0"

[[package]]
name = "tensorflow-addons"
version = "0.18.0"
description = "TensorFlow Addons."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
packaging = "*"
typeguard = ">=2.7"

[package.extras]
tensorflow = ["tensorflow (>=2.8.0,<2.11.0)"]
tensorflow-cpu = ["tensorflow-cpu (>=2.8.0,<2.11.0)"]
tensorflow-gpu = ["tensorflow-gpu (>=2.8.0,<2.11.0)"]

[[package]]
name = "tensorflow-estimator"
version = "2.10.0"
description = "TensorFlow Estimator."
category = "main"
optional = true
python-versions = ">=3.7"

[[package]]
name = "tensorflow-io-gcs-filesystem"
version = "0.27.0"
description = "TensorFlow IO"
category = "main"
optional = true
python-versions = ">=3.7, <3.11"

[package.extras]
tensorflow = ["tensorflow (>=2.10.0,<2.11.0)"]
tensorflow-aarch64 = ["tensorflow-aarch64 (>=2.10.0,<2.11.0)"]
tensorflow-cpu = ["tensorflow-cpu (>=2.10.0,<2.11.0)"]
tensorflow-gpu = ["tensorflow-gpu (>=2.10.0,<2.11.0)"]
tensorflow-rocm = ["tensorflow-rocm (>=2.10.0,<2.11.0)"]

[[package]]
name = "termcolor"
version = "2.1.0"
description = "ANSI color formatting for output in terminal"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "tflite"
version = "2.4.0"
description = "Parsing TensorFlow Lite Models (*.tflite) Easily"
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,<4,>=2.7"

[package.dependencies]
flatbuffers = "*"
numpy = "*"

[[package]]
name = "threadpoolctl"
version = "3.1.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tifffile"
version = "2022.10.10"
description = "Read and write TIFF files"
category = "main"
optional = true
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.19.2"

[package.extras]
all = ["imagecodecs (>=2022.2.22)", "matplotlib (>=3.3)", "lxml", "zarr", "fsspec"]

[[package]]
name = "timm"
version = "0.4.12"
description = "(Unofficial) PyTorch Image Models"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
torch = ">=1.4"
torchvision = "*"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "1.12.0"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
typing-extensions = "*"

[[package]]
name = "torch-tb-profiler"
version = "0.2.1"
description = "PyTorch Profiler TensorBoard Plugin"
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
pandas = ">=1.0.0"
tensorboard = ">=1.15,<2.1.0 || >2.1.0"

[package.extras]
blob = ["azure-storage-blob"]
gs = ["google-cloud-storage"]
s3 = ["boto3"]

[[package]]
name = "torchaudio"
version = "0.12.0"
description = "An audio package for PyTorch"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
torch = "*"

[[package]]
name = "torchmetrics"
version = "0.10.2"
description = "PyTorch native Metrics"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17.2"
packaging = "*"
torch = ">=1.3.1"
typing-extensions = {version = "*", markers = "python_version < \"3.9\""}

[package.extras]
all = ["pystoi", "torchvision (>=0.8)", "pycocotools", "lpips", "torch-fidelity", "scipy", "torchvision", "pytorch-lightning (>=1.5)", "nltk (>=3.6)", "tqdm (>=4.41.0)", "regex (>=2021.9.24)"]
audio = ["pystoi"]
detection = ["torchvision (>=0.8)", "pycocotools"]
docs = ["sphinxcontrib-fulltoc (>=1.0)", "nbsphinx (>=0.8)", "sphinx-autodoc-typehints (>=1.0)", "sphinx-paramlinks (>=0.5.1)", "docutils (>=0.16)", "sphinx-copybutton (>=0.3)", "sphinxcontrib-mockautodoc", "sphinx (>=4.0,<5.0)", "pandoc (>=1.0)", "sphinx-togglebutton (>=0.2)", "myst-parser"]
image = ["lpips", "torch-fidelity", "scipy", "torchvision"]
integrate = ["pytorch-lightning (>=1.5)"]
test = ["torch-complex", "psutil", "pytest-timeout", "pytorch-msssim (==0.2.1)", "netcal", "requests", "scikit-image (>0.17.1)", "sacrebleu (>=2.0.0)", "pytest-cov (>2.10)", "cloudpickle (>=1.3)", "fast-bss-eval (>=0.1.0)", "phmdoctest (>=1.1.1)", "pre-commit (>=1.0)", "check-manifest", "pypesq (>1.2)", "scikit-learn (>1.0,<1.1.1)", "rouge-score (>=0.0.4)", "huggingface-hub (<0.7)", "pycocotools", "fire", "transformers (>=4.0)", "pytest (>=6.0.0,<7.0.0)", "bert-score (==0.3.10)", "mir-eval (>=0.6)", "jiwer (>=2.3.0)", "pytest-doctestplus (>=0.9.0)", "coverage (>5.2)"]
text = ["nltk (>=3.6)", "tqdm (>=4.41.0)", "regex (>=2021.9.24)"]

[[package]]
name = "torchvision"
version = "0.13.0"
description = "image and video datasets and models for torch deep learning"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=5.3.0,<8.3.0 || >=8.4.0"
requests = "*"
torch = "1.12.0"
typing-extensions = "*"

[package.extras]
scipy = ["scipy"]

[[package]]
name = "tqdm"
version = "4.64.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "twisted"
version = "21.7.0"
description = "An asynchronous networking framework written in Python"
category = "main"
optional = true
python-versions = ">=3.6.7"

[package.dependencies]
attrs = ">=19.2.0"
Automat = ">=0.8.0"
constantly = ">=15.1"
hyperlink = ">=17.1.1"
incremental = ">=21.3.0"
twisted-iocpsupport = {version = ">=1.0.0,<1.1.0", markers = "platform_system == \"Windows\""}
typing-extensions = ">=3.6.5"
"zope.interface" = ">=4.4.2"

[package.extras]
all_non_platform = ["cython-test-exception-raiser (>=1.0,<2.0)", "PyHamcrest (>=1.9.0)", "pyopenssl (>=16.0.0)", "service-identity (>=18.1.0)", "idna (>=2.4)", "pyasn1", "cryptography (>=2.6)", "appdirs (>=1.4.0)", "bcrypt (>=3.0.0)", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)", "pywin32 (!=226)", "contextvars (>=2.4,<3)"]
conch = ["pyasn1", "cryptography (>=2.6)", "appdirs (>=1.4.0)", "bcrypt (>=3.0.0)"]
contextvars = ["contextvars (>=2.4,<3)"]
dev = ["towncrier (>=19.2,<20.0)", "sphinx-rtd-theme (>=0.5,<1.0)", "readthedocs-sphinx-ext (>=2.1,<3.0)", "sphinx (>=3.3,<4.0)", "pyflakes (>=2.2,<3.0)", "twistedchecker (>=0.7,<1.0)", "coverage (>=6b1,<7)", "python-subunit (>=1.4,<2.0)", "pydoctor (>=21.2.2,<21.3.0)"]
dev_release = ["towncrier (>=19.2,<20.0)", "sphinx-rtd-theme (>=0.5,<1.0)", "readthedocs-sphinx-ext (>=2.1,<3.0)", "sphinx (>=3.3,<4.0)", "pydoctor (>=21.2.2,<21.3.0)"]
http2 = ["h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)"]
macos_platform = ["pyobjc-core", "pyobjc-framework-cfnetwork", "pyobjc-framework-cocoa", "cython-test-exception-raiser (>=1.0,<2.0)", "PyHamcrest (>=1.9.0)", "pyopenssl (>=16.0.0)", "service-identity (>=18.1.0)", "idna (>=2.4)", "pyasn1", "cryptography (>=2.6)", "appdirs (>=1.4.0)", "bcrypt (>=3.0.0)", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)", "pywin32 (!=226)", "contextvars (>=2.4,<3)"]
mypy = ["mypy (==0.910)", "mypy-zope (==0.3.2)", "types-setuptools", "towncrier (>=19.2,<20.0)", "sphinx-rtd-theme (>=0.5,<1.0)", "readthedocs-sphinx-ext (>=2.1,<3.0)", "sphinx (>=3.3,<4.0)", "pyflakes (>=2.2,<3.0)", "twistedchecker (>=0.7,<1.0)", "coverage (>=6b1,<7)", "cython-test-exception-raiser (>=1.0,<2.0)", "PyHamcrest (>=1.9.0)", "pyopenssl (>=16.0.0)", "service-identity (>=18.1.0)", "idna (>=2.4)", "pyasn1", "cryptography (>=2.6)", "appdirs (>=1.4.0)", "bcrypt (>=3.0.0)", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)", "pywin32 (!=226)", "python-subunit (>=1.4,<2.0)", "contextvars (>=2.4,<3)", "pydoctor (>=21.2.2,<21.3.0)"]
osx_platform = ["pyobjc-core", "pyobjc-framework-cfnetwork", "pyobjc-framework-cocoa", "cython-test-exception-raiser (>=1.0,<2.0)", "PyHamcrest (>=1.9.0)", "pyopenssl (>=16.0.0)", "service-identity (>=18.1.0)", "idna (>=2.4)", "pyasn1", "cryptography (>=2.6)", "appdirs (>=1.4.0)", "bcrypt (>=3.0.0)", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)", "pywin32 (!=226)", "contextvars (>=2.4,<3)"]
serial = ["pyserial (>=3.0)", "pywin32 (!=226)"]
test = ["cython-test-exception-raiser (>=1.0,<2.0)", "PyHamcrest (>=1.9.0)"]
tls = ["pyopenssl (>=16.0.0)", "service-identity (>=18.1.0)", "idna (>=2.4)"]
windows_platform = ["pywin32 (!=226)", "cython-test-exception-raiser (>=1.0,<2.0)", "PyHamcrest (>=1.9.0)", "pyopenssl (>=16.0.0)", "service-identity (>=18.1.0)", "idna (>=2.4)", "pyasn1", "cryptography (>=2.6)", "appdirs (>=1.4.0)", "bcrypt (>=3.0.0)", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)", "pywin32 (!=226)", "contextvars (>=2.4,<3)"]

[[package]]
name = "twisted-iocpsupport"
version = "1.0.2"
description = "An extension for use in the twisted I/O Completion Ports reactor."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "typeguard"
version = "2.13.3"
description = "Run-time type checker for Python"
category = "main"
optional = true
python-versions = ">=3.5.3"

[package.extras]
doc = ["sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["pytest", "typing-extensions", "mypy"]

[[package]]
name = "typing-extensions"
version = "4.4.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.12"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "urllib3-secure-extra", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "usb"
version = "0.0.83.dev0"
description = "Manage and search browser histories across multiple browsers and browser profiles."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "virtualenv"
version = "20.16.6"
description = "Virtual Python Environment builder"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
distlib = ">=0.3.6,<1"
filelock = ">=3.4.1,<4"
platformdirs = ">=2.4,<3"

[package.extras]
docs = ["proselint (>=0.13)", "sphinx (>=5.3)", "sphinx-argparse (>=0.3.2)", "sphinx-rtd-theme (>=1)", "towncrier (>=22.8)"]
testing = ["coverage (>=6.2)", "coverage-enable-subprocess (>=1)", "flaky (>=3.7)", "packaging (>=21.3)", "pytest (>=7.0.1)", "pytest-env (>=0.6.2)", "pytest-freezegun (>=0.4.2)", "pytest-mock (>=3.6.1)", "pytest-randomly (>=3.10.3)", "pytest-timeout (>=2.1)"]

[[package]]
name = "watchdog"
version = "2.1.9"
description = "Filesystem events monitoring"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
watchmedo = ["PyYAML (>=3.10)"]

[[package]]
name = "wcwidth"
version = "0.2.5"
description = "Measures the displayed width of unicode strings in a terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "werkzeug"
version = "2.2.2"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "west"
version = "0.14.0"
description = "Zephyr RTOS Project meta-tool"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
colorama = "*"
packaging = "*"
pykwalify = "*"
PyYAML = ">=5.1"

[[package]]
name = "wfdb"
version = "3.4.1"
description = "The WFDB Python Toolbox"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
matplotlib = ">=3.3.4"
numpy = ">=1.10.1"
pandas = ">=0.17.0"
requests = ">=2.8.1"
scipy = ">=0.17.0"

[package.extras]
test = ["nose (>=1.3.7)"]

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = true
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "xgboost"
version = "1.5.2"
description = "XGBoost Python Package"
category = "main"
optional = true
python-versions = ">=3.6"

[package.dependencies]
numpy = "*"
scipy = "*"

[package.extras]
dask = ["dask", "pandas", "distributed"]
datatable = ["datatable"]
pandas = ["pandas"]
plotting = ["graphviz", "matplotlib"]
scikit-learn = ["scikit-learn"]

[[package]]
name = "xlsxwriter"
version = "1.4.5"
description = "A Python module for creating Excel XLSX files."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "yarl"
version = "1.8.1"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "zipp"
version = "3.10.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "furo", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "func-timeout", "jaraco.functools", "more-itertools", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "zope.interface"
version = "5.5.1"
description = "Interfaces for Python"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
docs = ["sphinx", "repoze.sphinx.autointerface"]
test = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]
testing = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]

[extras]
onnxrt-backend = ["onnxruntime"]
tf-backend = ["onnx-tf"]
tvm = ["hannah-tvm", "dgl-cu102"]
vision = ["pycocotools", "albumentations", "imagecorruptions", "timm", "gdown", "kornia"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8 <3.11"
content-hash = "652cd9e1798887a42c2765112da9bc12cd472b24328e8ada925d3fa5b8e62b69"

[metadata.files]
absl-py = []
aiohttp = []
aiosignal = []
albumentations = []
alembic = []
antlr4-python3-runtime = []
appdirs = []
astunparse = []
async-timeout = []
atomicwrites = []
attrs = []
automat = []
autopage = []
bcrypt = []
beautifulsoup4 = []
bitstring = []
black = []
board-automate = []
cachetools = []
certifi = []
cffi = []
cfgv = []
chainmap = []
charset-normalizer = []
click = []
cliff = []
cloudpickle = []
cmaes = []
cmd2 = []
colorama = []
coloredlogs = []
colorlog = []
configparser = []
constantly = []
contourpy = []
coverage = []
cryptography = []
cycler = []
decorator = []
dgl-cu102 = []
distlib = []
docopt = []
et-xmlfile = []
fabric = []
fairscale = []
filelock = []
fire = []
flatbuffers = []
fonttools = []
frozenlist = []
fsspec = []
gast = []
gdown = []
ghp-import = []
gitdb = []
gitdb2 = []
gitpython = []
google-auth = []
google-auth-oauthlib = []
google-pasta = []
graphviz = []
greenlet = []
griffe = []
grpcio = []
h5py = []
hannah-tvm = []
humanfriendly = []
hydra-colorlog = []
hydra-core = []
hydra-joblib-launcher = []
hydra-optuna-sweeper = []
hydra-submitit-launcher = []
hyperlink = []
identify = []
idna = []
imagecorruptions = []
imageio = []
importlib-metadata = []
importlib-resources = []
incremental = []
iniconfig = []
invoke = []
isort = []
jeepney = []
jinja2 = []
jinjasql = []
joblib = []
keras = []
keras-preprocessing = []
keyring = []
kiwisolver = []
kornia = []
libclang = []
libsvm = []
lightning-bolts = []
lightning-lite = []
lightning-utilities = []
mako = []
markdown = []
markupsafe = []
matplotlib = []
mergedeep = []
mkdocs = []
mkdocs-autorefs = []
mkdocs-gen-files = []
mkdocs-literate-nav = []
mkdocstrings = []
mkdocstrings-python = []
mpmath = []
multidict = []
mypy = []
mypy-extensions = []
networkx = []
nodeenv = []
numpy = []
nvsmi = []
oauthlib = []
omegaconf = []
onnx = []
onnx-tf = []
onnxoptimizer = []
onnxruntime = []
opencv-python = []
opencv-python-headless = []
openpyxl = []
opt-einsum = []
optuna = []
packaging = []
pandas = []
paramiko = []
patchwork = []
pathlib2 = []
pathspec = []
pbr = []
pillow = []
platformdirs = []
pluggy = []
pre-commit = []
prettytable = []
prompt-toolkit = []
protobuf = []
psycopg2-binary = []
ptable = []
pwlf = []
py = []
pyasn1 = []
pyasn1-modules = []
pycocotools = []
pycparser = []
pydantic = []
pydoe = []
pydot = []
pyelftools = []
pykwalify = []
pymdown-extensions = []
pyment = []
pynacl = []
pyparsing = []
pyperclip = []
pyreadline3 = []
pyserial = []
pysocks = []
pytest = []
pytest-cov = []
python-dateutil = []
python-dotenv = []
pytorch-lightning = []
pytz = []
pyvcd = []
pywavelets = []
pywin32-ctypes = []
pyyaml = []
pyyaml-env-tag = []
qudida = []
requests = []
requests-oauthlib = []
rope = []
rsa = []
"ruamel.yaml" = []
"ruamel.yaml.clib" = []
scikit-image = []
scikit-learn = []
scipy = []
seaborn = []
secretstorage = []
setproctitle = []
setuptools-scm = []
six = []
smmap = []
smmap2 = []
soundfile = []
soupsieve = []
sqlalchemy = []
stevedore = []
submitit = []
sympy = []
tabulate = []
tensorboard = []
tensorboard-data-server = []
tensorboard-plugin-wit = []
tensorflow = []
tensorflow-addons = []
tensorflow-estimator = []
tensorflow-io-gcs-filesystem = []
termcolor = []
tflite = []
threadpoolctl = []
tifffile = []
timm = []
toml = []
tomli = []
torch = []
torch-tb-profiler = []
torchaudio = []
torchmetrics = []
torchvision = []
tqdm = []
twisted = []
twisted-iocpsupport = []
typeguard = []
typing-extensions = []
urllib3 = []
usb = []
virtualenv = []
watchdog = []
wcwidth = []
werkzeug = []
west = []
wfdb = []
wrapt = []
xgboost = []
xlsxwriter = []
yarl = []
zipp = []
"zope.interface" = []
