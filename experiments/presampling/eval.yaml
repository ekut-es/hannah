##
## Copyright (c) 2022 University of TÃ¼bingen.
##
## This file is part of hannah.
## See https://atreus.informatik.uni-tuebingen.de/ties/ai/hannah/hannah for further info.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
data:
  # random_nas_pre: trained_models/random_nas_cifar10_presample_weights/embedded_vision_net
  # ae_nas_pre: trained_models/ae_nas_cifar10_presample_weights/embedded_vision_net
  # random_nas_batch: trained_models/random_nas_cifar10_filter_weights_batch/embedded_vision_net
  # ae_nas_batch: trained_models/ae_nas_cifar10_filter_weights_batch/embedded_vision_net
  # random_nas_always: trained_models/random_nas_cifar10_presample_weights_always/embedded_vision_net
  # ae_nas_always: trained_models/ae_nas_cifar10_presample_weights_always/embedded_vision_net
  # random_nas_no_pool: trained_models/random_nas_cifar10_no_pool/embedded_vision_net
  # ae_nas_no_pool: trained_models/ae_nas_cifar10_no_pool/embedded_vision_net
  # ae_nas_large: trained_models/ae_nas_cifar10_large/embedded_vision_net
  ae_nas_fixedbounds: trained_models/ae_nas_cifar10_fixedbounds/embedded_vision_net
  # ae_nas_rwcs: trained_models/ae_nas_cifar10_rwcs/embedded_vision_net
  ae_nas_improvedrw: trained_models/ae_nas_cifar10_improvedrandomwalk_4gpu/embedded_vision_net
  ae_nas_constraints: trained_models/ae_nas_cifar10_weight_constrained/embedded_vision_net
  ae_nas_constraints_fix1: trained_models/ae_nas_cifar10_weight_constrained_exception/embedded_vision_net
  ae_nas_constraints_fix2: trained_models/ae_nas_cifar10_weight_constrained_setparams/embedded_vision_net
  ae_nas_weights_macs: trained_models/ae_nas_cifar10_weight_macs/embedded_vision_net
  space_explore: trained_models/defined_space_exploration/embedded_vision_net


metrics:
  total_act:
    name: Activations
  total_weights:
    name: Weights
  weights_m:
    name: Weights [M]
    derived: data["total_weights"] / 1000 / 1000
  val_accuracy:
    name: Accuracy [%]
    derived: (1.0 - data["val_error"]) * 100.0
  act_k:
    name: Activations [k]
    derived: data["total_act"] / 1000
  macs_m:
    name: MACS [M]
    derived: data["total_macs"] / 1000 / 1000

plots:
  # Comparison plots 2-3 metrics using y, x and size as visualization points
  - type: comparison
    name: accuracy_memory
    metrics:
      - val_accuracy
      - weights_m
      - act_k

  - type: comparison
    name: accuracy_macs
    metrics:
      - val_accuracy
      - macs_m

extract:
  random_nas_cifar10:
    bounds:
        val_error: 0.20
        total_macs: 100000000
        total_weights: 1000000


experiment: presampling
force: false

hydra:
  run:
    dir: ./nas_results/${experiment}
