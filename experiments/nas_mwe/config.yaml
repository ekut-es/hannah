##
## Copyright (c) 2022 University of TÃ¼bingen.
##
## This file is part of hannah.
## See https://atreus.informatik.uni-tuebingen.de/ties/ai/hannah/hannah for further info.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
defaults:
    - base_config
    - override dataset: cifar10                 # Dataset configuration name
    - override nas: aging_evolution_nas         # which NAS algorithm to use
    - override features: identity               # Feature extractor configuration name (use identity for vision datasets)
    - override model: simple_conv_search_space  # in case of NAS -> search space name
    - override scheduler: 1cycle                # learning rate scheduler config name
    - override optimizer: sgd                   # Optimizer config name
    - override normalizer: null                 # Feature normalizer (used for quantized neural networks)
    - override module: image_classifier         # Lightning module config for the training loop (image classifier for image classification tasks)
    - _self_


dataset:
  data_folder: ${oc.env:HANNAH_DATA_FOLDER,${hydra:runtime.cwd}/../../datasets/}

trainer:
  max_epochs: 10
  limit_train_batches: 0.1  # Set this to 1.0 to use the whole training set


nas:
  budget: 2000
  n_jobs: 1
  population_size: 10
  # Note: If we choose a different NAS algorithm, it might be necessary
  # to use different config fields (e.g. population size might throw an error for random search).

  # The nas samples  {total_candidates}, sorts them by a {sort_key} (currently predicted val_error, which is 0 if no
  # predictor is chosen or trained) and only chooses the {num_selected_candidates} for training. Here,
  # we just use all and take as many candidates as the population size of the AE
  total_candidates: 10
  num_selected_candidates: 10


fx_mac_summary: True        # This has to be set to use current NAS search spaces
experiment_id: nas_mwe