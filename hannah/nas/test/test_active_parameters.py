from hannah.nas.functional_operators.op import Tensor
from hannah.models.embedded_vision_net.models import embedded_vision_net
from hannah.nas.functional_operators.utils.visit import get_active_parameters
from hannah.nas.parameters.parametrize import set_parametrization


def test_active_parameters():
    input = Tensor(name="input", shape=(1, 3, 32, 32), axis=("N", "C", "H", "W"))
    space = embedded_vision_net("space", input, num_classes=10)
    space.parametrization()["embedded_vision_net_0.ChoiceOp_0.num_blocks"].set_current(1)
    space.parametrization()["embedded_vision_net_0.block_0.pattern_0.ChoiceOp_0.choice"].set_current(4)
    # space.parametrization()["embedded_vision_net_0.block_0.pattern_0.sandglass_block_0.expansion_0.ChoiceOp_0.choice"].set_current(1)

    params = {'embedded_vision_net_0.ChoiceOp_0.num_blocks': 3,
 'embedded_vision_net_0.block_0.ChoiceOp_0.depth': 1,
 'embedded_vision_net_0.block_0.ChoiceOp_1.residual_choice': 1,
 'embedded_vision_net_0.block_0.pattern_0.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_0.pattern_0.Conv2d_0.stride': 2,
 'embedded_vision_net_0.block_0.pattern_0.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_0.pattern_0.Conv2d_0.weight.out_channels': 32,
 'embedded_vision_net_0.block_0.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 2,
 'embedded_vision_net_0.block_0.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_0.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_0.pattern_1.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_0.pattern_1.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_0.pattern_1.Conv2d_0.weight.out_channels': 144,
 'embedded_vision_net_0.block_0.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 6,
 'embedded_vision_net_0.block_0.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_0.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 3,
 'embedded_vision_net_0.block_0.pattern_2.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_0.pattern_2.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_0.pattern_2.Conv2d_0.weight.out_channels': 120,
 'embedded_vision_net_0.block_0.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 1,
 'embedded_vision_net_0.block_0.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_0.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_1.ChoiceOp_0.depth': 2,
 'embedded_vision_net_0.block_1.ChoiceOp_1.residual_choice': 1,
 'embedded_vision_net_0.block_1.pattern_0.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_1.pattern_0.Conv2d_0.stride': 1,
 'embedded_vision_net_0.block_1.pattern_0.Conv2d_0.weight.kernel_size': 9,
 'embedded_vision_net_0.block_1.pattern_0.Conv2d_0.weight.out_channels': 168,
 'embedded_vision_net_0.block_1.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 4,
 'embedded_vision_net_0.block_1.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_1.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_1.pattern_1.ChoiceOp_0.choice': 0,
 'embedded_vision_net_0.block_1.pattern_1.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_1.pattern_1.Conv2d_0.weight.out_channels': 192,
 'embedded_vision_net_0.block_1.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 1,
 'embedded_vision_net_0.block_1.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_1.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_1.pattern_2.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_1.pattern_2.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_1.pattern_2.Conv2d_0.weight.out_channels': 192,
 'embedded_vision_net_0.block_1.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 3,
 'embedded_vision_net_0.block_1.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_1.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_2.ChoiceOp_0.depth': 0,
 'embedded_vision_net_0.block_2.ChoiceOp_1.residual_choice': 0,
 'embedded_vision_net_0.block_2.pattern_0.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_2.pattern_0.Conv2d_0.stride': 1,
 'embedded_vision_net_0.block_2.pattern_0.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_2.pattern_0.Conv2d_0.weight.out_channels': 176,
 'embedded_vision_net_0.block_2.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_2.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_2.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 3,
 'embedded_vision_net_0.block_2.pattern_1.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_2.pattern_1.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_2.pattern_1.Conv2d_0.weight.out_channels': 160,
 'embedded_vision_net_0.block_2.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 4,
 'embedded_vision_net_0.block_2.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_2.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_2.pattern_2.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_2.pattern_2.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_2.pattern_2.Conv2d_0.weight.out_channels': 104,
 'embedded_vision_net_0.block_2.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_2.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_2.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_3.ChoiceOp_0.depth': 1,
 'embedded_vision_net_0.block_3.ChoiceOp_1.residual_choice': 0,
 'embedded_vision_net_0.block_3.pattern_0.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_3.pattern_0.Conv2d_0.stride': 1,
 'embedded_vision_net_0.block_3.pattern_0.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_3.pattern_0.Conv2d_0.weight.out_channels': 96,
 'embedded_vision_net_0.block_3.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 4,
 'embedded_vision_net_0.block_3.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_3.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_3.pattern_1.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_3.pattern_1.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_3.pattern_1.Conv2d_0.weight.out_channels': 16,
 'embedded_vision_net_0.block_3.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 4,
 'embedded_vision_net_0.block_3.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_3.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_3.pattern_2.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_3.pattern_2.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_3.pattern_2.Conv2d_0.weight.out_channels': 112,
 'embedded_vision_net_0.block_3.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 6,
 'embedded_vision_net_0.block_3.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_3.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_4.ChoiceOp_0.depth': 1,
 'embedded_vision_net_0.block_4.ChoiceOp_1.residual_choice': 0,
 'embedded_vision_net_0.block_4.pattern_0.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_4.pattern_0.Conv2d_0.stride': 2,
 'embedded_vision_net_0.block_4.pattern_0.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_4.pattern_0.Conv2d_0.weight.out_channels': 48,
 'embedded_vision_net_0.block_4.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 2,
 'embedded_vision_net_0.block_4.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_4.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_4.pattern_1.ChoiceOp_0.choice': 2,
 'embedded_vision_net_0.block_4.pattern_1.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_4.pattern_1.Conv2d_0.weight.out_channels': 136,
 'embedded_vision_net_0.block_4.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_4.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_4.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_4.pattern_2.ChoiceOp_0.choice': 2,
 'embedded_vision_net_0.block_4.pattern_2.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_4.pattern_2.Conv2d_0.weight.out_channels': 64,
 'embedded_vision_net_0.block_4.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 1,
 'embedded_vision_net_0.block_4.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_4.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_5.ChoiceOp_0.depth': 1,
 'embedded_vision_net_0.block_5.ChoiceOp_1.residual_choice': 1,
 'embedded_vision_net_0.block_5.pattern_0.ChoiceOp_0.choice': 2,
 'embedded_vision_net_0.block_5.pattern_0.Conv2d_0.stride': 2,
 'embedded_vision_net_0.block_5.pattern_0.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_5.pattern_0.Conv2d_0.weight.out_channels': 152,
 'embedded_vision_net_0.block_5.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 6,
 'embedded_vision_net_0.block_5.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_5.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_5.pattern_1.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_5.pattern_1.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_5.pattern_1.Conv2d_0.weight.out_channels': 184,
 'embedded_vision_net_0.block_5.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 4,
 'embedded_vision_net_0.block_5.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_5.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 3,
 'embedded_vision_net_0.block_5.pattern_2.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_5.pattern_2.Conv2d_0.weight.kernel_size': 9,
 'embedded_vision_net_0.block_5.pattern_2.Conv2d_0.weight.out_channels': 64,
 'embedded_vision_net_0.block_5.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 1,
 'embedded_vision_net_0.block_5.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_5.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_6.ChoiceOp_0.depth': 2,
 'embedded_vision_net_0.block_6.ChoiceOp_1.residual_choice': 0,
 'embedded_vision_net_0.block_6.pattern_0.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_6.pattern_0.Conv2d_0.stride': 2,
 'embedded_vision_net_0.block_6.pattern_0.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_6.pattern_0.Conv2d_0.weight.out_channels': 128,
 'embedded_vision_net_0.block_6.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 2,
 'embedded_vision_net_0.block_6.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_6.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_6.pattern_1.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_6.pattern_1.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_6.pattern_1.Conv2d_0.weight.out_channels': 112,
 'embedded_vision_net_0.block_6.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_6.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_6.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_6.pattern_2.ChoiceOp_0.choice': 0,
 'embedded_vision_net_0.block_6.pattern_2.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_6.pattern_2.Conv2d_0.weight.out_channels': 72,
 'embedded_vision_net_0.block_6.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 3,
 'embedded_vision_net_0.block_6.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_6.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 3,
 'embedded_vision_net_0.block_7.ChoiceOp_0.depth': 1,
 'embedded_vision_net_0.block_7.ChoiceOp_1.residual_choice': 1,
 'embedded_vision_net_0.block_7.pattern_0.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_7.pattern_0.Conv2d_0.stride': 2,
 'embedded_vision_net_0.block_7.pattern_0.Conv2d_0.weight.kernel_size': 9,
 'embedded_vision_net_0.block_7.pattern_0.Conv2d_0.weight.out_channels': 256,
 'embedded_vision_net_0.block_7.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 2,
 'embedded_vision_net_0.block_7.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_7.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_7.pattern_1.ChoiceOp_0.choice': 4,
 'embedded_vision_net_0.block_7.pattern_1.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_7.pattern_1.Conv2d_0.weight.out_channels': 192,
 'embedded_vision_net_0.block_7.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 6,
 'embedded_vision_net_0.block_7.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_7.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_7.pattern_2.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_7.pattern_2.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_7.pattern_2.Conv2d_0.weight.out_channels': 136,
 'embedded_vision_net_0.block_7.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 2,
 'embedded_vision_net_0.block_7.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_7.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 3,
 'embedded_vision_net_0.block_8.ChoiceOp_0.depth': 2,
 'embedded_vision_net_0.block_8.ChoiceOp_1.residual_choice': 1,
 'embedded_vision_net_0.block_8.pattern_0.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_8.pattern_0.Conv2d_0.stride': 1,
 'embedded_vision_net_0.block_8.pattern_0.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_8.pattern_0.Conv2d_0.weight.out_channels': 184,
 'embedded_vision_net_0.block_8.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_8.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_8.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_8.pattern_1.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_8.pattern_1.Conv2d_0.weight.kernel_size': 9,
 'embedded_vision_net_0.block_8.pattern_1.Conv2d_0.weight.out_channels': 216,
 'embedded_vision_net_0.block_8.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_8.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_8.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 3,
 'embedded_vision_net_0.block_8.pattern_2.ChoiceOp_0.choice': 0,
 'embedded_vision_net_0.block_8.pattern_2.Conv2d_0.weight.kernel_size': 7,
 'embedded_vision_net_0.block_8.pattern_2.Conv2d_0.weight.out_channels': 32,
 'embedded_vision_net_0.block_8.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_8.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_8.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_9.ChoiceOp_0.depth': 0,
 'embedded_vision_net_0.block_9.ChoiceOp_1.residual_choice': 1,
 'embedded_vision_net_0.block_9.pattern_0.ChoiceOp_0.choice': 1,
 'embedded_vision_net_0.block_9.pattern_0.Conv2d_0.stride': 2,
 'embedded_vision_net_0.block_9.pattern_0.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.block_9.pattern_0.Conv2d_0.weight.out_channels': 16,
 'embedded_vision_net_0.block_9.pattern_0.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_9.pattern_0.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_9.pattern_0.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 2,
 'embedded_vision_net_0.block_9.pattern_1.ChoiceOp_0.choice': 3,
 'embedded_vision_net_0.block_9.pattern_1.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_9.pattern_1.Conv2d_0.weight.out_channels': 248,
 'embedded_vision_net_0.block_9.pattern_1.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 5,
 'embedded_vision_net_0.block_9.pattern_1.pooling_0.ChoiceOp_0.pool_mode': 1,
 'embedded_vision_net_0.block_9.pattern_1.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.block_9.pattern_2.ChoiceOp_0.choice': 0,
 'embedded_vision_net_0.block_9.pattern_2.Conv2d_0.weight.kernel_size': 5,
 'embedded_vision_net_0.block_9.pattern_2.Conv2d_0.weight.out_channels': 72,
 'embedded_vision_net_0.block_9.pattern_2.expand_reduce_0.expansion_0.Conv2d_0.weight.expand_ratio': 2,
 'embedded_vision_net_0.block_9.pattern_2.pooling_0.ChoiceOp_0.pool_mode': 0,
 'embedded_vision_net_0.block_9.pattern_2.reduce_expand_0.reduction_0.Conv2d_0.weight.reduce_ratio': 4,
 'embedded_vision_net_0.stem_0.Conv2d_0.stride': 1,
 'embedded_vision_net_0.stem_0.Conv2d_0.weight.kernel_size': 3,
 'embedded_vision_net_0.stem_0.Conv2d_0.weight.out_channels': 44}

    input2 = Tensor(name="input", shape=(1, 3, 32, 32), axis=("N", "C", "H", "W"))
    space2 = embedded_vision_net("space2", input2, num_classes=10)
    parametrization = set_parametrization(params, space2.parametrization())
    active_params = get_active_parameters(space, parametrization)
    space.parametrization()
    # print()


def test_fixed_parametrization():
    input = Tensor(name="input", shape=(1, 3, 32, 32), axis=("N", "C", "H", "W"))
    space = embedded_vision_net("space", input, num_classes=10)



if __name__ == "__main__":
    test_active_parameters()
    # test_fixed_parametrization()